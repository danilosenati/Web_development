Assuntos retirado das páginas:
https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Guide/Grammar_and_types

https://pt.wikipedia.org/wiki/Case-sensitive#:~:text=Case%2Dsensitive%20significa%20que%20caracteres,sempre%20escritos%20em%20caixa%20baixa.

https://www.youtube.com/watch?v=RY1Rq0INc9U

Sintaxe básica

JavaScript pega emprestado a maior parte de sua sintaxe do Java, mas também é influenciado por Awk, Perl e Python.

JavaScript é case-sensitive e usa o conjunto de caracteres Unicode.
Por exemplo, a palavra Früh (que significa "cedo" em Alemão) pode ser usada como nome de variável.

Case-sensitive significa que caracteres em caixa alta e em caixa baixa são tratados de modo diferente. Por exemplo, as palavras sum e SUM são consideradas diferentes.

TIPOS DE DADOS

O mais recente padrão ECMAScript define sete tipos de dados:

Seis tipos de dados são os chamados primitivos:

- boolean: true e false.

- null: Uma palavra-chave que indica valor nulo. Devido JavaScript ser case-sensitive, null não é o mesmo que Null, NULL, ou ainda outra variação.

- undefined: Uma propriedade superior cujo valor é indefinido.

- number: 42 ou 3.14159.

- string: "Howdy"- Symbol (novo em ECMAScript 6). Um tipo de dado cuja as instâncias são únicas e imutáveis.

- Object: Embora esses tipos de dados sejam uma quantidade relativamente pequena, eles permitem realizar funções úteis em suas aplicações. Objetos e funções são outros elementos fundamentais na linguagem. Você pode pensar em objetos como recipientes para os valores, e funções como métodos que suas aplicações podem executar.


DECLARAÇÕES

Há três maneiras de declarar variáveis em Javascript:

- var: Declara uma variável, opcionalmente, inicializando-a com um valor.
- let: Declara uma variável local de escopo do bloco, opcionalmente, inicializando-a com um valor.
- const: Declara uma constante de escopo de bloco, apenas de leitura.


VARIAVEIS LOCAIS:
- São variáveis declaradas dentro de uma função.
- Não podem ser usadas ou modificadas por outras funções.
- Somente pode ser utilizadas e acessadas detro da função que se encontra.

EXEMPLO ESCOPO LOCAL:
<script>
        function teste(){
        var idade = 18;
        console.log("Idade: "+idade+" anos");
    }
</script>

VARIAVEIS GLOBAIS:
- São declaradas fora das funções.
- São acessiveis em todos os lugares
- Podem ser utilizadas e modificadas por todas as outras funções.


EXEMPLO ESCOPO GLOBAL:
var idade = 18;
<script>
        function teste(){ 
        console.log("Idade: "+idade);
    }
</script>
